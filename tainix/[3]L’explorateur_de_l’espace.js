const populations

function more_than_20_letter(data){
        
        let letters_iteration = []
        
        for (let j = 0; j < data.length; j++) {
            let letter = data[j]
            if (letter !== " " && !letters_iteration.includes(letter)) {
                letters_iteration.push(letter)
            }
        }
        
        if (letters_iteration.length >= 20 ) {
            return true
        }else{
            return false
        }
}

function word_with_2_letter(words){
    let list = []
    for (let i = 0; i < words.length; i++) {
        if (words[i].length === 2) {
            list.push(words[i]);
        }
    }
    return list
}

function word_more_than_2_letters(words) {
    let words_more_2_letters = []
    for (let i = 0; i < words.length; i++) {
        if (words[i].length > 2 ) {
            words_more_2_letters.push(words[i])
        }        
    }
    return words_more_2_letters
}

function five_words_repeat_more_2_time(words){
    let word_iteration = {}

    for (let i = 0; i < words.length; i++) {
        if (word_iteration[words[i]]) {
            word_iteration[words[i]]++
        }else{
            word_iteration[words[i]] = 1
        }
    }

    let words_good = 0
    for( let element in word_iteration){
        if(word_iteration[element] >= 2){
            words_good++
        }
    }

    return words_good >=5 ?  true : false 
}

function decrypte_all_language (populations){
    let languages = []
    let good_languge = ""
    
    for(let i = 0; i < populations.length ;i++){
        let data = populations[i].split(":")
        
        //data 0 = name    data 1 = word
        languages.push( {
            name:data[0],
            word:data[1].split(" "),
        })

        if (more_than_20_letter(data[1]) === false) {
            console.log("moin de 20");
            continue
        }

        if(five_words_repeat_more_2_time(word_more_than_2_letters(languages[i].word)) === false){
            console.log("moin de 5");
            continue
        }
        
        let two_letters_word = word_with_2_letter(languages[i].word)
        
        if (two_letters_word.length >= 10) {
            console.log("trop de mot a 2 lettre");
            continue
        }
        console.log(languages[i].name);
        good_languge += languages[i].name
    }
    return good_languge
}

console.log(decrypte_all_language(populations));